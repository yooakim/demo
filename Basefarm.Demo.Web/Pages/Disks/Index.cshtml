@page
@model Basefarm.Demo.Web.Pages.Disks.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
                <th>
                    @Html.DisplayNameFor(model => model.LogicalDisk[0].Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LogicalDisk[0].Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LogicalDisk[0].SystemName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LogicalDisk[0].FreeSpace)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LogicalDisk[0].Size)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LogicalDisk[0].Compressed)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LogicalDisk[0].DriveType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LogicalDisk[0].FileSystem)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LogicalDisk[0].MaximumComponentLength)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LogicalDisk[0].MediaType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LogicalDisk[0].SupportsDiskQuotas)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LogicalDisk[0].SupportsFileBasedCompression)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LogicalDisk[0].VolumeDirty)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LogicalDisk[0].VolumeName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LogicalDisk[0].VolumeSerialNumber)
                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.LogicalDisk) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SystemName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FreeSpace)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Size)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Compressed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DriveType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FileSystem)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MaximumComponentLength)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MediaType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SupportsDiskQuotas)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SupportsFileBasedCompression)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VolumeDirty)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VolumeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VolumeSerialNumber)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
